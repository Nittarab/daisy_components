The goal of this project is to create a component library. 
The design system is providered by DaisyUI.
The Component Library is a Rails Engine.
It's build with TailwindCSS and DaisyUI, ViewComponent and Rails.


We take inspiration from the following projects:
https://github.com/primer/design
https://github.com/primer/view_components

This project use Lookbook for documentation 
https://github.com/lookbook-hq/lookbook
The preview are in the test/components/previews folder
The docs are in the test/components/docs folder

use Gemfile to manage dependencies no gemspec

Use Minitest and Fixtures for testing
Use Capybara for testing

Create SVG for icons, and use the IconHelper to render them
The IconHelper should not be used in the component, but in the test and the preview, Icon are passed, to the component

DONT delete documentation comments in the code, update them instead

Ruby Style Guide
Style/ClassAndModuleChildren

good:
```ruby
module DaisyComponents
  module Actions
    class SwapComponentTest < DaisyComponents::ComponentTestCase
    end
  end
end
```

bad:
```ruby
class DaisyComponents::Actions::SwapComponentTest < DaisyComponents::ComponentTestCase
end
```

Every component preview should have a playground method with all the parameters as options and the description as Lookbook description.
For every component create:
 - Ruy class
 - html template
 - lookbook preview with a playground method and the description as Lookbook description with group and label 
 - TEST: in the test we test the component behavior and the preview (just the fact that they render). Don't duplicate tests to much, but give precedence to the preview but be sure to test the behavior)
 - documentation

For images, use placehold.co to generate placeholder images.

When you want to check the coverage, run:
COVERAGE=true bin/rails test

Every component preview should be organized into groups that separate HTML and Ruby source rendering.

